using RimWorld;
using Verse;
namespace mama
{
	// Token: 0x0200000E RID: 14
	public class lightcode : HediffWithComps
	{
		
		public override void ExposeData()
		{
			base.ExposeData();
			Scribe_References.Look(ref flashlight, "light", false);
			Scribe_Values.Look(ref lightStatut, "lightStatut", false, false);
			Scribe_Values.Look(ref nextUpdateTicks, "nextUpdateTicks", 0, false);
		}

		// Token: 0x06000028 RID: 40 RVA: 0x0000320C File Offset: 0x0000140C
		public override void Tick()
		{
			base.Tick();
			bool flag = lightStatut || Find.TickManager.TicksGame >= nextUpdateTicks;
			if (flag)
			{
				nextUpdateTicks = Find.TickManager.TicksGame + 60;
				RefreshLight();
			}
		}

		// Token: 0x06000029 RID: 41 RVA: 0x00003264 File Offset: 0x00001464
		public void RefreshLight()
		{
			bool flag = ComputeLightState();
			bool flag2 = flag;
			if (flag2)
			{
				LightON();
			}
			else
			{
				LightOFF();
			}
		}

		// Token: 0x0600002A RID: 42 RVA: 0x00003294 File Offset: 0x00001494
		public bool ComputeLightState()
		{
			bool flag = pawn.Dead || !RestUtility.Awake(pawn);
			bool result;
			if (flag)
			{
				result = false;
			}
			else
			{
				bool flag2 = pawn.Map.glowGrid.PsychGlowAt(pawn.Position) != PsychGlow.Overlit; 
				{
					result = flag2;
				}
			}
			return result;
		}

		// Token: 0x0600002B RID: 43 RVA: 0x00003374 File Offset: 0x00001574
		public void LightON()
		{
			IntVec3 intVec = IntVec3Utility.ToIntVec3(pawn.DrawPos);
			bool flag = !ThingUtility.DestroyedOrNull(flashlight) && intVec != flashlight.Position;
			if (flag)
			{
				LightOFF();
			}
			bool flag2 = ThingUtility.DestroyedOrNull(flashlight);
			if (flag2)
			{
				Thing firstThing = GridsUtility.GetFirstThing(intVec, pawn.Map, Uilitity.Flashlight);
				bool flag3 = firstThing == null;
				if (flag3)
				{
					flashlight = GenSpawn.Spawn(Uilitity.Flashlight, intVec, pawn.Map, 0);
				}
			}
			lightStatut = true;
		}

		// Token: 0x0600002C RID: 44 RVA: 0x0000341C File Offset: 0x0000161C
		public void LightOFF()
		{
			bool flag = !ThingUtility.DestroyedOrNull(flashlight);
			if (flag)
			{
				flashlight.Destroy(0);
				flashlight = null;
			}
			lightStatut = false;
		}

		// Token: 0x0400000D RID: 13
		public const int updateTicks = 60;

		// Token: 0x0400000E RID: 14
		public int nextUpdateTicks = 0;

		// Token: 0x0400000F RID: 15
		public Thing flashlight;

		// Token: 0x04000010 RID: 16
		public bool lightStatut = false;

	}
}